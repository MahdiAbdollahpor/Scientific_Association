@using ServiceLayer.Services.Interfaces
@using ServiceLayer.ViewModels.AdminViewModels
@using ServiceLayer.ViewModels.BaseViewModels
@model BaseFilterViewModel<ListUserViewModel>
@inject IAdminService _adminService
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/AdminPanel/Views/Shared/_Layout.cshtml";
}

<!-- Content area -->

<div class="flex-1 overflow-auto p-6">
    <div class="content-area" id="users-content">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-800">مدیریت کاربران</h2>

            <!-- Search Box -->
            <div class="relative">
                <form method="get" asp-action="UsersList" id="formFilter">
                    <input hidden value="@Model.PageIndex" id="pageId" name="pageId" />
                    <input type="text" id="user-search" placeholder="جستجوی کاربر..."
                           class="pr-10 pl-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                        <i class="fas fa-search text-gray-400"></i>
                    </div>
                </form>
               
            </div>

          
        </div>
        <div class="bg-white shadow rounded-lg overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">ردیف</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">نام</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">نام خانوادگی</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">شماره تماس</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">کد ملی</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">کد دانشجویی</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">تاریخ عضویت</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">وضعیت</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">عملیات</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200" id="users-table-body">

                        @{
                            int counter = 1;
                        }

                        @foreach (var item in Model.Entities)
                        {
                            <tr>
                                <th class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" scope="row">@counter</th>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@item.firstName</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.lastName</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.PhoneNumber</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.nationalCode</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.studentNumber</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.CreateDate</td>
                                <td>@(item.IsDeleted == true ? "غیر فعال" : " فعال")</td>

                                <td>
                                    <button id="edit-user-btn" class="text-yellow-600 hover:text-yellow-900 ml-2 edit-user-btn"
                                            data-user-id="@item.Id">
                                        <i class="fas fa-edit"></i>
                                    </button>

                                    <!-- دکمه چاپ -->
                                    <a href="@Url.Action("PrintUserCard", "Account", new { area = "AdminPanel", id = item.Id })"
                                       class="text-blue-600 hover:text-blue-900 ml-2">
                                        <i class="fas fa-print"></i>
                                    </a>
                                  
                                </td>
                            </tr>
                            counter++;
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card-footer">
        @if (Model.PageCount > 1)
        {
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    @if (Model.PageIndex > Model.StartPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="javascript:;" aria-label="Previous">
                                <span aria-hidden="true">«</span>
                            </a>
                        </li>
                    }
                    @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                    {
                        <li class="page-item">
                            <a class="page-link paginations @(Model.PageIndex == i ? "active" : "")" href="javascript:;">@i</a>
                        </li>
                    }

                    @if (Model.PageIndex < Model.EndPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="javascript:;" aria-label="Next">
                                <span aria-hidden="true">»</span>
                            </a>
                        </li>
                    }

                </ul>
            </nav>
        }

    </div>


   @*  <div class="content-area hidden" id="news-content">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-800">مدیریت اخبار</h2>
            <button id="new-news-btn" class="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none">
                <i class="fas fa-plus ml-2"></i>
                خبر جدید
            </button>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="news-container">
            <!-- News cards will be added dynamically -->
        </div> *@
    </div>










<script>
 






    document.addEventListener('DOMContentLoaded', function () {
        //مدیریت رویداد کلیک برای ویرایش کاربر
        document.addEventListener('click', function (e) {
            const editBtn = e.target.closest('.edit-user-btn');
            if (editBtn) {
                e.preventDefault();
                const userId = editBtn.getAttribute('data-user-id');
                showEditUserModal(userId);
            }
        });

    function showEditUserModal(userId) {
        if (!userId || isNaN(userId)) {
            console.error("شناسه نامعتبر است");
            return;
        }

        fetch(`/AdminPanel/Account/EditUser/${userId}`)
            .then(response => response.ok ? response.text() : Promise.reject("خطا در دریافت اطلاعات کاربر"))
            .then(html => {
                const modalContainer = document.createElement('div');
                modalContainer.innerHTML = html;
                document.body.appendChild(modalContainer);

                document.getElementById('user-modal-overlay').classList.add('active');
                document.getElementById('user-modal').classList.add('active');
                setupModalEvents();
            })
            .catch(error => console.error('Error:', error));
    }

    function setupModalEvents() {
        document.querySelectorAll('.close-user-modal').forEach(btn => {
            btn.addEventListener('click', closeModal);
        });

        const userForm = document.getElementById('user-form');
        if (userForm) {
            userForm.addEventListener('submit', function (e) {
                e.preventDefault();
                submitUserForm(this);
            });
        }
    }

    function closeModal() {
        document.getElementById('user-modal-overlay').classList.remove('active');
        document.getElementById('user-modal').classList.remove('active');

        document.getElementById('user-modal')?.remove();
        document.getElementById('user-modal-overlay')?.remove();
    }

        function submitUserForm(form) {
           // نمایش Loader (اختیاری)
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> در حال پردازش...';
            submitBtn.disabled = true;

          //  جمع‌آوری داده‌های فرم
            const formData = new FormData(form);

          //  تبدیل FormData به شیء ساده (برای خطایابی)
            const formDataObj = {};
            formData.forEach((value, key) => formDataObj[key] = value);
            console.log('داده‌های ارسالی:', formDataObj);

          //  ارسال با AJAX
            $.ajax({
                url: form.action,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    if (data.success) {
                       // نمایش پیام موفقیت
                        Swal.fire({
                            icon: 'success',
                            title: 'موفق',
                            text: data.message,
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                       // نمایش خطاهای اعتبارسنجی
                        showValidationErrors(data.errors || [data.message]);
                    }
                },
                error: function (xhr, status, error) {
                    let errorMessage = 'خطا در ارتباط با سرور';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMessage = xhr.responseJSON.message;
                    }
                    Swal.fire({
                        icon: 'error',
                        title: 'خطا',
                        text: errorMessage
                    });
                },
                complete: function () {
                   // بازگرداندن دکمه به حالت اول
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                }
            });
        }

       // تابع نمایش خطاهای اعتبارسنجی
        function showValidationErrors(errors) {
            let errorHtml = '<ul>';
            errors.forEach(error => {
                errorHtml += `<li>${error}</li>`;
            });
            errorHtml += '</ul>';

            Swal.fire({
                icon: 'error',
                title: 'خطا در اعتبارسنجی',
                html: errorHtml
            });
        }

        // جستجوی زنده
        const searchInput = document.getElementById('user-search');
        if (searchInput) {
            searchInput.addEventListener('input', debounce(function () {
                const searchValue = this.value.trim().toLowerCase();
                document.querySelectorAll('#users-table-body tr').forEach(row => {
                    const name = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    row.style.display = name.includes(searchValue) ? '' : 'none';
                });
            }, 300));
        }
    });

    // تابع debounce برای بهینه‌سازی جستجو
    function debounce(func, wait) {
        let timeout;
        return function () {
            const context = this, args = arguments;
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(context, args), wait);
        };
    }

  


</script>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>